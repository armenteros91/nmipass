// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThreeTP.Payment.Infrastructure.Persistence;

#nullable disable

namespace ThreeTP.Payment.Infrastructure.Migrations
{
    [DbContext(typeof(NmiDbContext))]
    [Migration("20250625194829_initialMigrations")]
    partial class initialMigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ThreeTP.Payment.Domain.Entities.Nmi.NmiTransactionRequestLog", b =>
                {
                    b.Property<Guid>("NmiTransactionRequestLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasDefaultValueSql("USER_NAME()");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CONVERT(DATETIME2, DATEADD(HOUR, -5, GETDATE()), 120)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PayloadJson")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("RawContent")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("NmiTransactionRequestLogId");

                    b.HasIndex("CreatedDate")
                        .HasDatabaseName("IX_CreatedAt");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("IX_OrderId");

                    b.ToTable("TblNmiTransactionRequestLog", "Logging");
                });

            modelBuilder.Entity("ThreeTP.Payment.Domain.Entities.Nmi.NmiTransactionResponseLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasDefaultValueSql("USER_NAME()");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CONVERT(DATETIME2, DATEADD(HOUR, -5, GETDATE()), 120)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RawResponse")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<Guid>("RequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedDate")
                        .HasDatabaseName("IX_TblNmiTransactionResponseLog_CreatedDate");

                    b.HasIndex("RequestId")
                        .HasDatabaseName("IX_TblNmiTransactionResponseLog_RequestId");

                    b.HasIndex("TransactionId")
                        .HasDatabaseName("IX_TblNmiTransactionResponseLog_TransactionId");

                    b.ToTable("TblNmiTransactionResponseLog", "Logging");
                });

            modelBuilder.Entity("ThreeTP.Payment.Domain.Entities.Nmi.TransactionResponse", b =>
                {
                    b.Property<Guid>("TransaccionResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuthCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AvsResponse")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CustomerVaultId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CvvResponse")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("EmvAuthResponseData")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("FkTransactionsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KountScore")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MerchantAdviceCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("OrderId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Response")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.Property<string>("ResponseCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ResponseText")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TransaccionResponseId");

                    b.HasIndex("FkTransactionsId");

                    b.ToTable("TblTransactionResponse", "Payment");
                });

            modelBuilder.Entity("ThreeTP.Payment.Domain.Entities.Payments.TransactionType", b =>
                {
                    b.Property<Guid>("TypeTransactionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasDefaultValueSql("USER_NAME()");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CONVERT(DATETIME2, DATEADD(HOUR, -5, GETDATE()), 120)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("TypeTransactionsId");

                    b.ToTable("PlTblTransactionsType", "Payment");
                });

            modelBuilder.Entity("ThreeTP.Payment.Domain.Entities.Payments.Transactions", b =>
                {
                    b.Property<Guid>("TransactionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasDefaultValueSql("USER_NAME()");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CONVERT(DATETIME2, DATEADD(HOUR, -5, GETDATE()), 120)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("ResponseCode")
                        .HasColumnType("int")
                        .HasColumnName("ResponseCode");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid>("TraceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TypeTransactionsId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TypeTransaction");

                    b.Property<string>("paymentTransactionId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TransactionsId");

                    b.HasIndex("TenantId");

                    b.HasIndex("TypeTransactionsId");

                    b.ToTable("TblTransactions", "Payment");
                });

            modelBuilder.Entity("ThreeTP.Payment.Domain.Entities.Tenant.Tenant", b =>
                {
                    b.Property<Guid>("TenantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasDefaultValueSql("USER_NAME()");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CONVERT(DATETIME2, DATEADD(HOUR, -5, GETDATE()), 120)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("TenantId");

                    b.ToTable("TblTenant", "Tenant");
                });

            modelBuilder.Entity("ThreeTP.Payment.Domain.Entities.Tenant.TenantApiKey", b =>
                {
                    b.Property<Guid>("TenantApikeyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApiKeyValue")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasDefaultValueSql("USER_NAME()");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CONVERT(DATETIME2, DATEADD(HOUR, -5, GETDATE()), 120)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("TenantApikeyId");

                    b.HasIndex("TenantId")
                        .IsUnique();

                    b.ToTable("TblApiKey", "Tenant");
                });

            modelBuilder.Entity("ThreeTP.Payment.Domain.Entities.Tenant.Terminal", b =>
                {
                    b.Property<Guid>("TerminalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasDefaultValueSql("USER_NAME()");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CONVERT(DATETIME2, DATEADD(HOUR, -5, GETDATE()), 120)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecretKeyEncrypted")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("SecretKeyHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("TerminalId");

                    b.HasIndex("SecretKeyEncrypted")
                        .IsUnique()
                        .HasDatabaseName("UQ_Terminal_SecretKeyEncrypted");

                    b.HasIndex("SecretKeyHash")
                        .HasDatabaseName("IDX_Terminal_SecretHash");

                    b.HasIndex("TenantId")
                        .IsUnique()
                        .HasDatabaseName("UQ_TblTerminalTenants_TenantId");

                    b.ToTable("TblTerminalTenants", "Tenant");
                });

            modelBuilder.Entity("ThreeTP.Payment.Domain.Entities.Nmi.NmiTransactionResponseLog", b =>
                {
                    b.HasOne("ThreeTP.Payment.Domain.Entities.Nmi.NmiTransactionRequestLog", "Request")
                        .WithMany("Responses")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_TblNmiTransactionResponseLog_TblNmiTransactionRequestLog_RequestId");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("ThreeTP.Payment.Domain.Entities.Nmi.TransactionResponse", b =>
                {
                    b.HasOne("ThreeTP.Payment.Domain.Entities.Payments.Transactions", "Transaction")
                        .WithMany("Responses")
                        .HasForeignKey("FkTransactionsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("ThreeTP.Payment.Domain.Entities.Payments.Transactions", b =>
                {
                    b.HasOne("ThreeTP.Payment.Domain.Entities.Tenant.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThreeTP.Payment.Domain.Entities.Payments.TransactionType", "TransactionType")
                        .WithMany("Transactions")
                        .HasForeignKey("TypeTransactionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("ThreeTP.Payment.Domain.Entities.Tenant.TenantApiKey", b =>
                {
                    b.HasOne("ThreeTP.Payment.Domain.Entities.Tenant.Tenant", "Tenant")
                        .WithOne("ApiKey")
                        .HasForeignKey("ThreeTP.Payment.Domain.Entities.Tenant.TenantApiKey", "TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("ThreeTP.Payment.Domain.Entities.Tenant.Terminal", b =>
                {
                    b.HasOne("ThreeTP.Payment.Domain.Entities.Tenant.Tenant", "Tenant")
                        .WithOne("Terminal")
                        .HasForeignKey("ThreeTP.Payment.Domain.Entities.Tenant.Terminal", "TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("ThreeTP.Payment.Domain.Entities.Nmi.NmiTransactionRequestLog", b =>
                {
                    b.Navigation("Responses");
                });

            modelBuilder.Entity("ThreeTP.Payment.Domain.Entities.Payments.TransactionType", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("ThreeTP.Payment.Domain.Entities.Payments.Transactions", b =>
                {
                    b.Navigation("Responses");
                });

            modelBuilder.Entity("ThreeTP.Payment.Domain.Entities.Tenant.Tenant", b =>
                {
                    b.Navigation("ApiKey");

                    b.Navigation("Terminal");
                });
#pragma warning restore 612, 618
        }
    }
}
